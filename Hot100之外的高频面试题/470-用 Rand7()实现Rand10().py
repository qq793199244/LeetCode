'''
已有方法 rand7 可生成 1 到 7 范围内的均匀随机整数，试写一个方法 rand10 生成 1 到 10 范围内的均匀随机整数。
不要使用系统的 Math.random() 方法。
示例 1:
输入: 1
输出: [7]
示例 2:
输入: 2
输出: [8,4]
'''
# The rand7() API is already defined for you.
# def rand7():
# @return a random integer in the range 1 to 7

class Solution(object):
    def rand10(self):
        """
        :rtype: int
        """
        while True:
            idx = (rand7() - 1) * 7 + rand7()
            if idx <= 40:
                break
        return idx % 10 + 1
'''
a = rand7()
b = rand7()
x = a + (b - 1) * 7
1 + (x - 1) % 10
a,b均可以产生1,2,3,4,5,6,7这7个数每一个的概率都是1/7
b-1可以产生0,1,2,3,4,5,6这7个数每一个的概率都是1/7
(b - 1) * 7可以产生0,7,14,21,28,35,42这7个数的概率都是1/7
a + (b - 1) * 7可以产生
（0,7,14,21,28,35,42）+（1,2,3,4,5,6,7)两部分组合起来的共49种可能；
即（1～49)这49个数字，产生这49个数每一个的概率都是1/7*1/7=1/49
此时如果直接对这49个数字对10取余数得到的不是均匀的0～9，因为少了一个0,0对10取余数的0
因为此时产生1～49是均匀的，符合随机数的要求。我们对大于40的拒绝采用。
那么此时产生1～40与41～49每一个数字的概率都是1/49
但是我们得到1～40的概率是40/49，得到41～49的概率是9/49
我们会得到1～40之间的数字，每一个数字的概率都是一样的不再是1/7而应该是1/49。
那么(1～40)-1=(0~39)我们对0～39对10取余数，得到0～9的概率都是1/10
(0~9)+1=1~10得到结果
'''